// <auto-generated />
using BookInfo.API.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookInfo.API.Migrations
{
    [DbContext(typeof(BookInfoContext))]
    [Migration("20241030194622_mo7awla")]
    partial class mo7awla
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("BookInfo.API.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Ashton Kutcher",
                            Description = "Fucking shite",
                            Name = "48 laws of power"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Dean Bernat",
                            Description = "Fucking shite",
                            Name = "The Idiot Brain"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Gustave Le Bon",
                            Description = "Fucking shite",
                            Name = "Psychology of the Masses"
                        });
                });

            modelBuilder.Entity("BookInfo.API.Entities.ClassOfInterest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BookId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.ToTable("classOfInterests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 1,
                            Description = "Fucking Shite",
                            Name = "Never Outshine the Master"
                        },
                        new
                        {
                            Id = 2,
                            BookId = 2,
                            Description = "Shitee",
                            Name = "Long Memory Short Memory"
                        },
                        new
                        {
                            Id = 3,
                            BookId = 1,
                            Description = "Fucking Shite",
                            Name = "Reputation Protect It"
                        },
                        new
                        {
                            Id = 4,
                            BookId = 2,
                            Description = "Shitee",
                            Name = "Alcohol and Memory"
                        },
                        new
                        {
                            Id = 5,
                            BookId = 3,
                            Description = "Fucking Shite",
                            Name = "The Masses are Easy to Manipulate"
                        },
                        new
                        {
                            Id = 6,
                            BookId = 3,
                            Description = "Shitee",
                            Name = "Mortada Mansour"
                        });
                });

            modelBuilder.Entity("BookInfo.API.Entities.ClassOfInterest", b =>
                {
                    b.HasOne("BookInfo.API.Entities.Book", "Books")
                        .WithMany("classesOfInterest")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Books");
                });

            modelBuilder.Entity("BookInfo.API.Entities.Book", b =>
                {
                    b.Navigation("classesOfInterest");
                });
#pragma warning restore 612, 618
        }
    }
}
